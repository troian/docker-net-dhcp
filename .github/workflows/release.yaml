on:
  push:
    tags:
      - 'v*'

name: Release

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      DOCKER_REPO: ghcr.io/troian/docker-net-dhcp
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/troian/docker-net-dhcp
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,priority=1000,pattern={{raw}}
            type=semver,priority=998,pattern={{major}}.{{minor}},prefix=v
      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Install script dependencies
        run: pip3 install -r scripts/requirements.txt
      - name: Build
        run: make PLUGIN_TAG=${{ github.ref }} multiarch
      - name: Push
        env:
          REGISTRY_USERNAME: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          make PLUGIN_TAG=${{ github.ref }} push-multiarch
          scripts/tag_multiarch_plugin.py -p "$PLATFORMS" "$PLUGIN_NAME:${{ github.ref }}" latest
      - name: Tag with release
        env:
          REGISTRY_USERNAME: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          scripts/tag_multiarch_plugin.py -p $PLATFORMS "$DOCKER_REPO:latest" ${{ steps.vars.outputs.version }}
          scripts/tag_multiarch_plugin.py -p $PLATFORMS "$DOCKER_REPO:latest" release
